<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dh.mapper.core.BlogMapper">
  <resultMap id="BaseResultMap" type="com.dh.entity.core.Blog">
    <result column="ID" jdbcType="BIGINT" property="id" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="SUMMARY" jdbcType="VARCHAR" property="summary" />
    <result column="CONTENT_ID" jdbcType="CHAR" property="contentId" />
    <result column="TYPE_ID" jdbcType="BIGINT" property="typeId" />
    <result column="BLOGGER_UID" jdbcType="VARCHAR" property="bloggerUid" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `ID`, `TITLE`, `SUMMARY`, `CONTENT_ID`, `TYPE_ID`, `BLOGGER_UID`, `CREATE_TIME`, 
    `UPDATE_TIME`
  </sql>
  <select id="selectByExample" parameterType="com.dh.entity.core.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.dh.entity.core.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dh.entity.core.Blog">
    insert into blog (`ID`, `TITLE`, `SUMMARY`, 
      `CONTENT_ID`, `TYPE_ID`, `BLOGGER_UID`, 
      `CREATE_TIME`, `UPDATE_TIME`)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, 
      #{contentId,jdbcType=CHAR}, #{typeId,jdbcType=BIGINT}, #{bloggerUid,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dh.entity.core.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `ID`,
      </if>
      <if test="title != null">
        `TITLE`,
      </if>
      <if test="summary != null">
        `SUMMARY`,
      </if>
      <if test="contentId != null">
        `CONTENT_ID`,
      </if>
      <if test="typeId != null">
        `TYPE_ID`,
      </if>
      <if test="bloggerUid != null">
        `BLOGGER_UID`,
      </if>
      <if test="createTime != null">
        `CREATE_TIME`,
      </if>
      <if test="updateTime != null">
        `UPDATE_TIME`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="contentId != null">
        #{contentId,jdbcType=CHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="bloggerUid != null">
        #{bloggerUid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dh.entity.core.BlogExample" resultType="java.lang.Long">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.id != null">
        `ID` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        `TITLE` = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        `SUMMARY` = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.contentId != null">
        `CONTENT_ID` = #{record.contentId,jdbcType=CHAR},
      </if>
      <if test="record.typeId != null">
        `TYPE_ID` = #{record.typeId,jdbcType=BIGINT},
      </if>
      <if test="record.bloggerUid != null">
        `BLOGGER_UID` = #{record.bloggerUid,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        `CREATE_TIME` = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        `UPDATE_TIME` = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set `ID` = #{record.id,jdbcType=BIGINT},
      `TITLE` = #{record.title,jdbcType=VARCHAR},
      `SUMMARY` = #{record.summary,jdbcType=VARCHAR},
      `CONTENT_ID` = #{record.contentId,jdbcType=CHAR},
      `TYPE_ID` = #{record.typeId,jdbcType=BIGINT},
      `BLOGGER_UID` = #{record.bloggerUid,jdbcType=VARCHAR},
      `CREATE_TIME` = #{record.createTime,jdbcType=TIMESTAMP},
      `UPDATE_TIME` = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>